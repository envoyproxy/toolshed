name: Build Sysroots

on:
  push:
    branches:
    - main
    paths:
    - 'sysroot/**'
    - '.github/workflows/sysroot.yml'
  pull_request:
    paths:
    - 'sysroot/**'
    - '.github/workflows/sysroot.yml'
  release:
    types:
      released

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
        - arch: amd64
          runs-on: ubuntu-24.04
        - arch: arm64
          runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - name: Install debootstrap/
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install -y debootstrap
    - name: Build ${{ matrix.arch }} sysroot
      run: |
        sudo debootstrap \
          --arch=${{ matrix.arch }} \
          --variant=minbase \
          --include=libc6,libc6-dev,linux-libc-dev,libnuma-dev \
          bullseye \
          sysroot-${{ matrix.arch }} \
          http://deb.debian.org/debian/
        echo "deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal main" \
          | sudo tee sysroot-${{ matrix.arch }}/etc/apt/sources.list.d/toolchain.list
        sudo apt-key --keyring sysroot-${{ matrix.arch }}/etc/apt/trusted.gpg adv \
          --keyserver keyserver.ubuntu.com --recv-keys 1E9377A2BA9EF27F
        sudo chroot sysroot-${{ matrix.arch }} apt-get update
        sudo chroot sysroot-${{ matrix.arch }} apt-get install -y libstdc++-13-dev
    - name: Cleanup sysroot
      run: |
        sudo chroot sysroot-${{ matrix.arch }} apt-get clean
        sudo rm -rf sysroot-${{ matrix.arch }}/var/lib/apt/lists/*
        sudo rm -rf sysroot-${{ matrix.arch }}/var/cache/apt/*
        sudo rm -rf sysroot-${{ matrix.arch }}/usr/share/doc/*
        sudo rm -rf sysroot-${{ matrix.arch }}/usr/share/man/*
        sudo rm -rf sysroot-${{ matrix.arch }}/usr/share/info/*
        sudo rm -rf sysroot-${{ matrix.arch }}/usr/share/lintian/*
        sudo rm -rf sysroot-${{ matrix.arch }}/etc/apt/sources.list.d/*
    - name: Package sysroot
      run: |
        sudo tar -cJf sysroot-${{ matrix.arch }}.tar.xz -C sysroot-${{ matrix.arch }} .
    - name: Upload ${{ matrix.arch }} sysroot
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
      with:
        name: sysroot-${{ matrix.arch }}
        path: sysroot-${{ matrix.arch }}.tar.xz
        retention-days: 30

  publish:
    if: github.event_name == 'release' && startsWith(github.event.release.name, 'bazel-bins')
    runs-on: ubuntu-24.04
    needs:
    - build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
      with:
        path: artifacts
    - name: Upload release assets
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for artifact in artifacts/*; do
            [[ ! -d "$artifact" ]] && continue
            name=$(basename "$artifact")
            file=$(ls "$artifact"/*.tar.xz)
            echo "Uploading $file as $name.tar.xz"
            gh release upload "${{ github.event.release.tag_name }}" \
                "$file#$name.tar.xz" \
                --clobber
        done
