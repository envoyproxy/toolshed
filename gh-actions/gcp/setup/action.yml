inputs:
  key:
    type: string
    required: true

  boto:
    type: boolean
    default: true
  boto-rm:
    type: boolean
    default: false
  key-copy:
    type: string
    default:
    description: |
      Path to copy key to. Must exist and be a directory.
  python-version:
    type: string
    default: 3.12
  force-install:
    type: boolean
    default: false

outputs:
  key-path:
    value: ${{ steps.key.outputs.path }}
  key-copy-path:
    value: ${{ steps.key.outputs.copy-path }}


runs:
  using: "composite"
  steps:
  - run: |
      if [[ -e "~/.boto" ]]; then
          echo "Remove existing boto config ~/.boto"
          rm ~/.boto
      fi
    if: ${{ inputs.key && inputs.boto-rm }}
    shell: bash

  # Install gsutil if necessary
  - run: |
      if ! which gsutil >& /dev/null; then
          echo "installed=false" >> $GITHUB_OUTPUT
      else
          echo "installed=true" >> $GITHUB_OUTPUT
      fi
    id: gsutil
    if: ${{ inputs.key && ! fromJSON(inputs.force-install) }}
    shell: bash
  - uses: actions/setup-python@v5
    if: ${{ inputs.key && steps.gsutil.outputs.installed != 'true' }}
    with:
      python-version: ${{ inputs.python-version }}
  - if: ${{ inputs.key && steps.gsutil.outputs.installed != 'true' }}
    run: |
      pip install -r "${{ github.action_path }}/requirements.txt"
      UTIL_PATH="$(dirname $(which gsutil))"
      echo "PATH=$PATH:$UTIL_PATH" >> $GITHUB_ENV
    shell: bash
  - run: |
      gsutil --version
    if: ${{ inputs.key }}
    shell: bash

  - uses: envoyproxy/toolshed/gh-actions/github/script/run@actions-v0.3.12
    id: key
    if: ${{ inputs.key }}
    with:
      run: |
        GCP_KEY_PATH=$(mktemp -t gcp_account.XXXXXX.json)
        echo "${{ inputs.key }}" | base64 --decode > "${GCP_KEY_PATH}"
        echo "path=${GCP_KEY_PATH}" >> $GITHUB_OUTPUT
        echo "GCP_KEY_PATH=${GCP_KEY_PATH}" >> $GITHUB_ENV
        if [[ -n "${{ inputs.key-copy }}" ]]; then
            if [[ ! -e "${{ inputs.key-copy }}" || ! -d "${{ inputs.key-copy }}" ]]; then
                echo "If set key-copy must exist and be a directory" >&2
                exit 1
            fi
            cp -a "$GCP_KEY_PATH" "${{ inputs.key-copy }}"
            GCP_KEY_FILENAME=$(basename $GCP_KEY_PATH)
            GCP_KEY_COPY_PATH="${{ inputs.key-copy }}/${GCP_KEY_FILENAME}"
            echo "GCP_KEY_COPY_PATH=${GCP_KEY_COPY_PATH}" >> $GITHUB_ENV
            echo "copy-path=${GCP_KEY_COPY_PATH}" >> $GITHUB_OUTPUT
        fi
        if [[ ${{ inputs.boto }} != "true" ]]; then
            exit 0
        fi
        {
            echo "[Credentials]"
            echo "gs_service_key_file=${GCP_KEY_PATH}"
        } > ~/.boto
      post: |
        if [[ -e "${GCP_KEY_PATH}" ]]; then
            echo "Remove key ${GCP_KEY_PATH}"
            rm -rf "${GCP_KEY_PATH}"
        fi
        if [[ -n "${GCP_KEY_COPY_PATH}" && -e "${GCP_KEY_COPY_PATH}" ]]; then
            echo "Remove key ${GCP_KEY_COPY_PATH}"
            rm -rf "${GCP_KEY_COPY_PATH}"
        fi
        if [[ -e "~/.boto" ]]; then
            echo "Remove boto config ~/.boto"
            rm ~/.boto
        fi
