inputs:
  key:
    type: string
    required: true

  boto:
    type: boolean
    default: true
  boto-rm:
    type: boolean
    default: false

outputs:
  key-path:
    value: ${{ steps.key.outputs.path }}


runs:
  using: "composite"
  steps:
  - run: |
      if [[ -e "~/.boto" ]]; then
          echo "Remove existing boto config ~/.boto"
          rm ~/.boto
      fi
    if: ${{ inputs.key && inputs.boto-rm }}
    shell: bash

  # Install gsutil if necessary
  - run: |
      if ! which gsutil >& /dev/null; then
          echo "installed=false" >> $GITHUB_OUTPUT
      else
          echo "installed=true" >> $GITHUB_OUTPUT
      fi
    id: gsutil
    if: ${{ inputs.key }}
    shell: bash
  - uses: actions/setup-python@v5
    if: ${{ inputs.key && steps.gsutil.outputs.installed != 'true' }}
    with:
      python-version: "3.12"
  - if: ${{ inputs.key && steps.gsutil.outputs.installed != 'true' }}
    run: |
      pip install gsutil
      UTIL_PATH="$(dirname $(which gsutil))"
      echo "PATH=$PATH:$UTIL_PATH" >> $GITHUB_ENV
    shell: bash
  - run: |
      gsutil --version
    if: ${{ inputs.key }}
    shell: bash

  - uses: envoyproxy/toolshed/gh-actions/github/script/run@actions-v0.3.4
    id: key
    if: ${{ inputs.key }}
    with:
      run: |
        GCP_KEY_PATH=$(mktemp -t gcp_account.XXXXXX.json)
        echo "${{ inputs.key }}" | base64 --decode > "${GCP_KEY_PATH}"
        echo "path=${GCP_KEY_PATH}" >> $GITHUB_OUTPUT
        echo "GCP_KEY_PATH=${GCP_KEY_PATH}" >> $GITHUB_ENV
        if [[ ${{ inputs.boto }} != "true" ]]; then
            exit 0
        fi
        {
            echo "[Credentials]"
            echo "gs_service_key_file=${GCP_KEY_PATH}"
        } > ~/.boto
      post: |
        echo "Remove key ${GCP_KEY_PATH}"
        rm -rf "${GCP_KEY_PATH}"
        echo "Remove boto config ~/.boto"
        rm ~/.boto
