
inputs:
  sh:
    type: string
    default:
  string:
    type: string
    default:
  output-path:
    type: string
    default:

outputs:
  out:
    value: ${{ steps.out.outputs.out }}

runs:
  using: composite
  steps:
  - if: ${{ inputs.sh }}
    id: sh
    run: |
      # Output multi-line result from command
      RESULT="$(${SH})"
      echo "out<<EOF" >> $GITHUB_OUTPUT
      printf "%s\n" "${RESULT}" >> $GITHUB_OUTPUT
      echo "EOF" >> $GITHUB_OUTPUT
    env:
      SH: ${{ inputs.sh }}
    shell: bash
  - if: ${{ inputs.string }}
    id: echo
    run: |
      # Output multi-line var
      echo "out<<EOF" >> $GITHUB_OUTPUT
      printf "%s\n" "${STRING}" >> $GITHUB_OUTPUT
      echo "EOF" >> $GITHUB_OUTPUT
    env:
      STRING: ${{ inputs.string }}
    shell: bash
  - id: out
    run: |
      # Output result
      echo "out<<EOF" >> $GITHUB_OUTPUT
      printf "%s\n" "${OUTPUT}" >> $GITHUB_OUTPUT
      echo "EOF" >> $GITHUB_OUTPUT
    shell: bash
    env:
      OUTPUT: ${{ steps.sh.outputs.out || steps.echo.outputs.out }}
  - if: ${{ inputs.output-path }}
    run: |
      # Output result to path ${{ inputs.output-path }}
      if [[ "${{ inputs.output-path }} == "GITHUB_STEP_SUMMARY" ]]; then
          OUTPUT_PATH="${GITHUB_STEP_SUMMARY}"
      else
          OUTPUT_PATH="${{ inputs.output-path }}"
      fi
      printf "%s\n" "${OUTPUT}" >> $OUTPUT_PATH
    shell: bash
    env:
      OUTPUT: ${{ steps.sh.outputs.out || steps.echo.outputs.out }}
