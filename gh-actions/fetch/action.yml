inputs:
  url:
    type: string
    required: true
  args:
    type: string
  filename:
    type: string
  path:
    type: string
  sha256:
    type: string
    required: false
    description: |
      Expected SHA256 hash of the downloaded file. If provided, the download will be verified against this hash.

outputs:
  path:
    value: ${{ steps.fetch.outputs.path }}

runs:
  using: "composite"
  steps:
  - run: |
      if [[ -n "${{ inputs.path }}" ]]; then
          path="${{ inputs.path }}"
      else
          path=$(mktemp -d)
      fi
      mkdir -p "$path"
      cd "$path"
      if [[ -n "${{ inputs.filename }}" ]]; then
          curl -sL ${{ inputs.args }} ${{ inputs.url }} > "${{ inputs.filename }}"
          FILENAME=${{ inputs.filename }}
      else
          curl -sLO ${{ inputs.args }} ${{ inputs.url }}
          FILENAME="$(basename "${{ inputs.url }}")"
      fi
      filepath="$(realpath "$FILENAME")"
      if [[ -n "${{ inputs.sha256 }}" ]]; then
          echo "Verifying SHA256 hash..."
          ACTUAL_SHA256=$(sha256sum "$FILENAME" | cut -d ' ' -f 1)
          EXPECTED_SHA256="${{ inputs.sha256 }}"
          echo "Expected SHA256: $EXPECTED_SHA256"
          echo "Actual SHA256:   $ACTUAL_SHA256"
          if [[ "$ACTUAL_SHA256" != "$EXPECTED_SHA256" ]]; then
              echo "ERROR: SHA256 hash verification failed!" >&2
              echo "  Expected: $EXPECTED_SHA256" >&2
              echo "  Actual:   $ACTUAL_SHA256" >&2
              rm -f "$FILENAME"
              exit 1
          fi
          echo "SHA256 hash verification succeeded"
      fi
      echo "path=${filepath}" >> $GITHUB_OUTPUT
      cd -
    shell: bash
    id: fetch
