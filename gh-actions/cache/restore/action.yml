inputs:
  command:
    type: string
    required: true
  key:
    type: string
    required: true

  owner:
    type: string
    default: runner:docker
  path_script:
    type: string
    default: /tmp/cachescript
  path_tmp:
    type: string
    default: /tmp/cache
  run_as_sudo:
    type: boolean
    default: true
  mount_tmpfs:
    type: boolean
    default: true

runs:
  using: "composite"
  steps:
  - run: |
      sudo mkdir -p ${{ inputs.path_tmp }}
      if [[ "${{ inputs.mount_tmpfs }}" == 'true' ]]; then
          sudo mount -t tmpfs none ${{ inputs.path_tmp }}
      fi
      sudo chown -R ${{ inputs.owner }} ${{ inputs.path_tmp }}
    shell: bash
  - name: Restore cache
    id: cache-restore
    uses: actions/cache/restore@3624ceb22c1c5a301c8db4169662070a689d9ea8  # v4.1.1
    with:
      path: ${{ inputs.path_tmp }}
      key: ${{ inputs.key }}
  - run: |
      echo "#!/bin/bash -e" > "${{ inputs.path_script }}"
      chmod +x "${{ inputs.path_script }}"
      echo "${{ inputs.command }}" >> "${{ inputs.path_script }}"
      cd ${{ inputs.path_tmp }} || exit 1
      if [[ "${{ inputs.run_as_sudo }}" == 'true' ]]; then
          sudo "${{ inputs.path_script }}"
      else
          "${{ inputs.path_script }}"
      fi
      cd - || exit 1
      if [[ "${{ inputs.mount_tmpfs }}" == 'true' ]]; then
          sudo umount ${{ inputs.path_tmp }}
      fi
      sudo rm -rf ${{ inputs.path_tmp }}
    shell: bash
