inputs:
  marker:
    type: string
    default: ☠☠☠
  replacements:
    type: string
    default: |
      - "%"
      # TODO(phlax): think of a better scheme for this
      #  when its sanitized it needs to be escaped and so is
      #  replaced using this value, but when desanitized it doesnt
      #  want the escape
      - "\\$"
  seed:
    type: string
    default: ☠❂⚓
  string:
    type: string
    required: false

outputs:
  string:
    value: ${{ steps.string.outputs.value }}


runs:
  using: composite
  steps:
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.59
    id: replacements
    with:
      input: ${{ inputs.replacements }}
      input-format: yaml
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.59
    name: String
    id: string
    with:
      input: ${{ inputs.string }}
      options: -Rsr
      sanitize-input: false
      filter: >-
        . as $input
        | "${{ inputs.seed }}" as $seed
        | "${{ inputs.marker }}" as $marker
        | ${{ steps.replacements.outputs.value }} as $replacements
        | $replacements
        | reduce .[] as $replacement ("";
            (if (. == "") then $input else . end) as $string
            | select($replacement != "")
            | "\($marker)\($seed + $replacement + "{{" | @base64)\($marker)" as $placeholder
            | $string
            | gsub($placeholder; ($replacement | if . == "\\$" then "$" else . end) + "{{"))
