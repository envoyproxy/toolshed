
inputs:
  append:
    type: boolean
    default: true
  column-filter:
    type: string
    default:
  columns:
    type: number
    default: 2
  title:
    type: string
  summary:
    type: string
  headers:
    type: string
    default: |
      - Variable
      - Value
  json:
    type: string
    required: true
  filter:
    default:
  sanitize-filter:
    default: >-
      if type == "null" then
        ""
      else
        .
      end
      | if (type == "object") then
          tojson
        else
          .
        end
      | if (type == "string" and test("\n")) then
          (split("\n")[0] + "..." )
        else
          .
        end
  mutate-cells:
    default: .
  output-path:
    type: string
  collapse:
    type: boolean
    default: false

outputs:
  table:
    value: ${{ steps.table.outputs.value }}
  summary:
    value: ${{ steps.summary.outputs.out }}


runs:
  using: composite
  steps:
  - id: headers
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.48
    with:
      input: |
        ${{ inputs.headers }}
      input-format: yaml
      filter: >-
        ("| " + (. | join(" | ")) + " |")
        + "\n"
        + ("| " + "--- | " * ${{ inputs.columns }})
  - id: columns
    run: |
      # Use k for 1-col, k/v for 2-col, and k/v/v for more
      if [[ "${{ inputs.columns }}" -eq 1 ]]; then
          FILTER='to_entries | map([.key])'
      elif [[ "${{ inputs.columns }}" -eq 2 ]]; then
          FILTER='to_entries | map([.key, .value])'
      else
          FILTER='to_entries | map([.key, (.value | to_entries | map(.value))])'
      fi
      printf 'filter=%s' "$FILTER" >> $GITHUB_OUTPUT
    shell: bash

  - id: mutated-cells
    uses: envoyproxy/toolshed/gh-actions/shout@f3005401833e04683797bb960efc3ede162570ee
    with:
      string: >-
        . as $table
        | map(. as $row
              | map(. as $cell
                    | ${{ inputs.mutate-cells || '.' }}
                    | ${{ inputs.sanitize-filter || '.' }}))

  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.48
    name: Generate table
    id: table
    with:
      input: ${{ inputs.json }}
      options: -r
      filter: |
        ${{ inputs.filter || '.' }}
        | ${{ inputs.column-filter || steps.columns.outputs.filter }}
        | ${{ steps.mutated-cells.outputs.out }}
        | map(join("|"))
        | join("\n") as $columns
        | ${{ steps.headers.outputs.value }}
        | . + "\n" + $columns

  - name: Summary
    if: ${{ ! inputs.collapse }}
    uses: envoyproxy/toolshed/gh-actions/shout@f3005401833e04683797bb960efc3ede162570ee
    with:
      string: |
        ${{ inputs.title && format('### {0}', inputs.title) }}
        ${{ steps.table.outputs.value }}
      output-path: GITHUB_STEP_SUMMARY

  - uses: envoyproxy/toolshed/gh-actions/str/indent@actions-v0.1.48
    id: indented
    if: ${{ inputs.collapse }}
    with:
      string: ${{ steps.table.outputs.value }}
      indent: 2

  - name: Summary
    if: ${{ inputs.collapse }}
    uses: envoyproxy/toolshed/gh-actions/shout@f3005401833e04683797bb960efc3ede162570ee
    with:
      string: |

        <details>
          <summary><b>${{ inputs.title }}</b></summary>

          ### ${{ inputs.summary }}

        ${{ steps.indented.outputs.string }}

        </details>
    id: summary

  - run: |
      if [[ "${{ inputs.output-path }}" == "GITHUB_STEP_SUMMARY" ]]; then
          printf '%s\n' "${REQUEST}" >> $GITHUB_STEP_SUMMARY
      else
          printf '%s\n' "${REQUEST}" >> ${{ inputs.output-path }}
      fi
    shell: bash
    if: ${{ inputs.output-path }}
    env:
      REQUEST: ${{ steps.summary.outputs.out }}
