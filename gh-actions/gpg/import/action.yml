inputs:
  key:
    type: string
    required: true
  passphrase:
    type: string
  passphrase-path:
    type: string
  configured-passphrase-path:
    type: string

outputs:
  path:
    value: ${{ steps.fetch.outputs.path }}

runs:
  using: "composite"
  steps:
  - name: Import GPG key
    uses: crazy-max/ghaction-import-gpg@v6
    with:
      gpg_private_key: ${{ inputs.key }}
      passphrase: ${{ inputs.passphrase }}

  - uses: envoyproxy/toolshed/gh-actions/github/script/run@actions-v0.3.9
    if: ${{ inputs.passphrase && inputs.passphrase-path }}
    with:
      run: |
        GNUPGHOME="${GNUPGHOME:-${HOME}/.gnupg}"

        # Set the passphrase in a file
        echo "${{ inputs.passphrase }}" > "${{ inputs.passphrase-path }}"
        chmod 600 "${{ inputs.passphrase-path }}"

        # Configure gpg to use the file - note the configured path is path inside container
        {
            echo "use-agent"
            echo "pinentry-mode loopback"
            echo "passphrase-file ${{ inputs.configured-passphrase-path || inputs.passphrase-path }}"
        } >> "$GNUPGHOME/gpg.conf"

        echo "" >> "$GNUPGHOME/gpg-agent.conf"
        echo "allow-loopback-pinentry" >> "$GNUPGHOME/gpg-agent.conf"

      post: |
        if [ -z "${{ inputs.passphrase }}" ]; then
            exit 0
        fi
        GNUPGHOME="${GNUPGHOME:-${HOME}/.gnupg}"
        rm "${{ inputs.passphrase-path }}"
        sed -i 's/passphrase-file/# passphrase-file/' "$GNUPGHOME/gpg.conf"
