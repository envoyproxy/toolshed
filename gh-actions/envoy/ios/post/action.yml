
inputs:
  app:
    type: string
    required: true
  args:
    type: string
    default: >-
      --config=ios
      --config=mobile-remote-ci-macos
  simulator-command:
    type: string
    default: >-
      ./mobile/ci/start_ios_simulator.sh
  status:
    type: number
    required: false


runs:
  using: composite
  steps:
  - uses: nick-fields/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd
    name: Start simulator
    with:
      timeout_minutes: 5
      max_attempts: 3
      command: ${{ inputs.simulator-command }}
  # Run the app in the background and redirect logs.
  - name: Run app
    run: |
      cd mobile
      ./bazelw run $ARGS $APP &> /tmp/envoy.log &
    shell: bash
    env:
      # TODO: handle these correctly with `read -ra`
      ARGS: ${{ inputs.args }}
      APP: ${{ inputs.app }}
  - run: |
      sed "/received headers with status ${STATUS}/q" <(touch /tmp/envoy.log && tail -F /tmp/envoy.log)
    shell:  bash
    env:
      STATUS: ${{ inputs.status }}
    if: ${{ inputs.status }}
    name: Check connectivity
  - run: cat /tmp/envoy.log
    if: ${{ failure() || cancelled() }}
    name: Log app run
    shell:  bash
