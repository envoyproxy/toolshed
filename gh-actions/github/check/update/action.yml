
inputs:
  data:
    type: string
    required: true
  repository:
    type: string
    default: ${{ github.repository }}
  template-script-current:
    type: string
    default: |
      # Find current check (\($name)) for run attempt (\($attempt))
      OUTPUT=\"$(gh api -q '.check_runs[0] | [.id, .output.text]' repos/\($repo)/commits/\($head_sha)/check-runs?check_name=\($name)&filter=latest)\"
  template-script-update:
    type: string
    default: |
      # Update check (\($name))
      CHECK=\($check)
      OUTPUT=\"$(echo $CHECK | gh api -XPATCH --input - repos/\($repo)/check-runs/\($id))\"
  token:
    type: string
    default: ${{ github.token }}

outputs:
  checks:
    value: ${{ steps.checks.outputs.value }}


runs:
  using: composite
  steps:
  # Find the current check and reuse its id/text
  - uses: envoyproxy/toolshed/gh-actions/bson@actions-v0.2.12
    name: Check data
    id: data
    with:
      input: ${{ inputs.data }}
      filter: |
        ${{ github.run_attempt }} as $attempt
        | "${{ inputs.repository }}" as $repo
        | (.name | @uri) as $name
        | .head_sha as $head_sha
        | ("${{ inputs.template-script-current }}" | bash::output)
    env:
      GH_TOKEN: ${{ inputs.token }}
  - name: Progress status check
    uses: envoyproxy/toolshed/gh-actions/bson@actions-v0.2.12
    with:
      input: |
        check: ${{ steps.data.outputs.output }}
        data: ${{ inputs.data }}
      filter: |
        .data as $data
        | .check[0] as $id
        | .check[1]
        | split("### Check started by")[1]
        | "
        \($data.output.text)

        ### Check started by\(.)" as $text
        | $data
        | .name as $name
        | "${{ inputs.repository }}" as $repo
        | .output.text = $text
        | .id = $id
        | tojson
        | @sh as $check
        | ("${{ inputs.template-script-update }}" | bash::output)
    env:
      GH_TOKEN: ${{ inputs.token }}
