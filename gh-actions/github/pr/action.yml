
inputs:
  base:
    type: string
    required: true
  body:
    type: string
  branch:
    type: string
    required: true
  commit:
    type: boolean
    default: true
  title:
    type: string
    required: true
  GITHUB_TOKEN:
    type: string
    required: true

  append-commit-message:
    type: boolean
    default: false
  committer-name:
    type: string
  committer-email:
    type: string
  commit-message:
    type: string
  working-directory:
    type: string
    default: .

runs:
  using: composite
  steps:
  - run: |
      git checkout -b "$BRANCH_NAME"
    name: Checkout branch (${{ inputs.branch }})
    working-directory: ${{ inputs.working-directory }}
    shell: bash
    env:
      BRANCH_NAME: ${{ inputs.branch }}
  - run: |
      echo "COMMIT: ${{ inputs.commit }}"
      git config --global user.name "$COMMITTER_NAME"
      git config --global user.email "$COMMITTER_EMAIL"
      git commit . -m "$COMMIT_MESSAGE"
    if: ${{ inputs.commit && inputs.commit != 'false' }}
    env:
      COMMITTER_NAME: ${{ inputs.committer-name }}
      COMMITTER_EMAIL: ${{ inputs.committer-email }}
      COMMIT_MESSAGE: ${{ inputs.commit-message || inputs.title }}
    name: Commit changes
    working-directory: ${{ inputs.working-directory }}
    shell: bash
  - run: |
      LAST_COMMIT=$(git log -1 --pretty=%B | tail -n +2)
      echo "text<<nEOFn" >> $GITHUB_OUTPUT
      echo "${LAST_COMMIT}" >> $GITHUB_OUTPUT
      echo "nEOFn" >> $GITHUB_OUTPUT
    id: body
    if: ${{ inputs.append-commit-message }} != 'false'
    env:
      PR_BODY: ${{ inputs.body }}
    shell: bash
  - run: |
      git push --no-verify --set-upstream origin "$BRANCH_NAME"
      gh pr create \
          -B "$BASE_BRANCH" \
          -H "$BRANCH_NAME" \
          --title "$PR_TITLE" \
          --body "$PR_BODY"
    env:
      GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      PR_TITLE: ${{ inputs.title }}
      PR_BODY: |
        ${{ inputs.body }}
        ${{ steps.body.outputs.text }}
      BRANCH_NAME: ${{ inputs.branch }}
      BASE_BRANCH: ${{ inputs.base }}
    name: Create a PR
    working-directory: ${{ inputs.working-directory }}
    shell: bash
