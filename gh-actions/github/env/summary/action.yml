inputs:
  append:
    type: boolean
    default: true
  base-sha:
    type: string
  column-filter:
    type: string
    default:
  data:
    type: string
    required: true
  icon:
    type: string
    required: true
  indent:
    type: number
    default: 0
  link:
    type: string
    required: false
  message:
    type: string
    required: true
  pr:
    type: number
  output-path:
    type: string
  ref:
    type: string
  sha:
    type: string
    required: true
  tables:
    type: string
    default:
  target-branch:
    type: string
    required: false
  title:
    type: string
    required: false

outputs:
  summary:
    value: ${{ steps.output.outputs.string }}
  title:
    value: ${{ steps.title.outputs.title }}


runs:
  using: composite
  steps:
  - uses: envoyproxy/toolshed/gh-actions/str/sub@actions-v0.1.54
    id: sha-short
    with:
      string: ${{ inputs.sha }}
      length: 7
  - uses: envoyproxy/toolshed/gh-actions/str/sub@actions-v0.1.54
    id: base-sha-short
    with:
      string: ${{ inputs.base-sha }}
      length: 7
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.54
    name: Tables
    id: tables
    with:
      input: ${{ inputs.tables }}
      input-format: yaml
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.54
    name: Change
    id: change
    with:
      input: ${{ inputs.message }}
      options: -Rs
      input-format: text
      filter: >-
        . as $message
        | ($message | split("\n")[0]) as $title
        | ($message | "  > " + (split("\n")[1:] | join("\n  > ")))
        | {"title": $title, "body": .}
  - uses: envoyproxy/toolshed/gh-actions/github/env/title@actions-v0.1.54
    id: title
    with:
      link: ${{ inputs.link }}
      pr: ${{ inputs.pr }}
      sha: ${{ inputs.sha }}
      target-branch: ${{ inputs.target-branch }}
      title: ${{ inputs.title }}
  - run: |
      echo "link=$PR_LINK" >> $GITHUB_OUTPUT
    shell: bash
    id: pr
    if: ${{ inputs.pr }}
    env:
      PR_LINK: >-
        ![](https://raw.githubusercontent.com/primer/octicons/main/icons/git-pull-request-16.svg)
        [#${{ inputs.pr }}](https://github.com/${{ github.repository }}/pull/${{ inputs.pr }})
        [`merge`](https://github.com/${{ github.repository }}/commit/${{ inputs.ref }})
        [`${{ inputs.target-branch }}@${{ steps.base-sha-short.outputs.string }}`](https://github.com/${{ github.repository }}/commit/${{ inputs.base-sha }})
  - run: |
      echo "value<<EOF" >> $GITHUB_OUTPUT
      printf "%s\n" "${TITLE}" >> $GITHUB_OUTPUT
      echo "${BODY}" >> $GITHUB_OUTPUT
      echo "EOF" >> $GITHUB_OUTPUT
    shell: bash
    id: request
    env:
      TITLE: >-
        ##
        ${{ inputs.icon }}
        Request (${{ inputs.link && format('[{0}]({1})', steps.title.outputs.title, inputs.link) || steps.title.outputs.title }})
      BODY: |
        <img src="${{ github.event.sender.avatar_url }}" alt="${{ github.actor }}" width="18" height="18"> @${{ github.actor }} [`${{ steps.sha-short.outputs.string }}`](https://github.com/${{ github.repository }}/commit/${{ inputs.sha }}) ${{ steps.pr.outputs.link }}

        <details>
          <summary><b>${{ fromJSON(steps.change.outputs.value).title }}</b></summary>

        ${{ fromJSON(steps.change.outputs.value).body }}
        </details>

    name: Summary

  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.54
    id: table-data
    with:
      input: ${{ inputs.data }}
      print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
      filter: |
        {request}

  - uses: envoyproxy/toolshed/gh-actions/foreach@actions-v0.1.54
    id: data-tables
    with:
      context: ${{ steps.table-data.outputs.value }}
      items: ${{ steps.tables.outputs.value }}
      steps: |
        - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.54
          id: context-$KEY
          with:
            input: >-
              %{{ inputs.context }}
            filter: |
              .items["$KEY"]
            print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
        - uses: envoyproxy/toolshed/gh-actions/json/table@actions-v0.1.54
          id: table-$KEY
          with:
            json: |
              %{{ inputs.context }}
            filter: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).filter }}
            title: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).title }}
            summary: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).table-title }}
            collapse: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).collapse }}

  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.54
    name: Inflated data tables
    id: formatted-tables
    with:
      input: ${{ toJSON(fromJSON(fromJSON(steps.data-tables.outputs.out)).*.outputs.summary) }}
      print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
      options: -r
      filter: |
        "  " + join("  \n")

  - uses: envoyproxy/toolshed/gh-actions/shout@actions-v0.1.54
    id: request-output
    with:
      string: |
        ${{ steps.request.outputs.value }}
        ${{ steps.formatted-tables.outputs.value }}
  - uses: envoyproxy/toolshed/gh-actions/str/indent@actions-v0.1.54
    id: output
    with:
      string: ${{ steps.request-output.outputs.out }}
      indent: ${{ inputs.indent }}
  - run: |
      # Output to ${{ inputs.output-path }}
      if [[ "${{ inputs.output-path }}" == "GITHUB_STEP_SUMMARY" ]]; then
          printf '%s\n' "${REQUEST}" >> $GITHUB_STEP_SUMMARY
      else
          printf '%s\n' "${REQUEST}" >> ${{ inputs.output-path }}
      fi
    shell: bash
    id: summary
    if: ${{ inputs.output-path }}
    env:
      REQUEST: ${{ steps.output.outputs.string }}
