inputs:
  append:
    type: boolean
    default: true
  base-sha:
    type: string
  column-filter:
    type: string
    default:
  data:
    type: string
    required: true
  icon:
    type: string
    required: true
  indent:
    type: number
    default: 0
  link:
    type: string
    required: false
  message:
    type: string
    required: true
  pr:
    type: number
  output-path:
    type: string
  ref:
    type: string
  sha:
    type: string
    required: true
  tables:
    type: string
    default:
  target-branch:
    type: string
    required: false
  title:
    type: string
    required: false

outputs:
  summary:
    value: ${{ toJSON(steps.output.outputs.value) }}
  title:
    value: ${{ steps.title.outputs.value }}


runs:
  using: composite
  steps:
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.66
    id: title
    with:
      input: ${{ toJSON(inputs) }}
      options: -r
      filter: |
        .repository = "${{ github.repository }}"
        | gfm::event_title
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.66
    name: Tables
    id: tables
    with:
      input: ${{ inputs.tables }}
      input-format: yaml

  - uses: envoyproxy/toolshed/gh-actions/foreach@actions-v0.1.66
    id: data-tables
    with:
      context: ${{ inputs.data }}
      context-filter: |
        {request}
      items: ${{ steps.tables.outputs.value }}
      steps: |
        - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.66
          id: context-$KEY
          with:
            input: >-
              %{{ inputs.context }}
            filter: |
              .items["$KEY"]
            print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
        - uses: envoyproxy/toolshed/gh-actions/json/table@actions-v0.1.66
          id: table-$KEY
          with:
            json: |
              %{{ inputs.context }}
            filter: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).filter }}
            title: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).title }}
            summary: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).table-title }}
            collapse: >-
              %{{ fromJSON(steps.context-$KEY.outputs.value).collapse }}

  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.66
    id: table-output
    with:
      input: ${{ toJSON(fromJSON(fromJSON(steps.data-tables.outputs.out)).*.outputs.summary) }}
      print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}

  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.66
    id: output
    with:
      input: ${{ toJSON(inputs) }}
      options: -r
      print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
      output-path: ${{ inputs.output-path }}
      filter: |
        . as $inputs
        | .icon as $icon
        | .sha as $sha
        | if $inputs.pr != "" then
            .["base-sha"] as $baseSha
            | "![](https://raw.githubusercontent.com/primer/octicons/main/icons/git-pull-request-16.svg)" as $prIcon
            | "[#\(.pr)](https://github.com/${{ github.repository }}/pull/\(.pr))" as $prLink
            | "[`merge`](https://github.com/${{ github.repository }}/commit/\(.ref))" as $mergeLink
            | "[`\(.["target-branch"])@\($baseSha[:7])`](https://github.com/${{ github.repository }}/commit/\($baseSha))" as $commitLink
            | "\($prIcon) \($prLink) \($mergeLink) \($commitLink)"
          else
            ""
          end
        | . as $pr
        | ${{ steps.table-output.outputs.value }}
        | join("\n") as $tables
        | "${{ inputs.link && format('[{0}]({1})', steps.title.outputs.value, inputs.link) || steps.title.outputs.value }}" as $link
        | "${{ github.event.sender.avatar_url }}" as $avatarIcon
        | "${{ github.actor }}" as $actor
        | "[`\($sha[:7])`](https://github.com/${{ github.repository }}/commit/\($sha))" as $commitLink
        | $inputs.message as $message
        | ($message | split("\n")[0]) as $title
        | ($message | "> " + (split("\n")[1:] | join("\n> "))) as $body
        | {title: $title, content: $body}
        | gfm::collapse as $change
        | {"title": $title, "body": .}
        | "
        ## \($icon) Request (\($link))

        <img src=\"\($avatarIcon)\" alt=\"\($actor)\" width=\"18\" height=\"18\"> @\($actor) \($commitLink) \($pr)

        \($change)

        \($tables)
        "
        | str::indent($inputs.indent // "0" | fromjson)
