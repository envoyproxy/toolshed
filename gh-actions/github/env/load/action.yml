
inputs:
  name:
    type: string
    default: env
  run-id:
    type: string
    required: true
  check-name:
    type: string
    default:
  filter:
    type: string
    default: .


outputs:
  data:
    value: ${{ steps.data.outputs.value }}
  output:
    value: ${{ steps.toenv.outputs.value }}


runs:
  using: composite
  steps:
  - name: Download environment data
    id: download
    uses: envoyproxy/toolshed/gh-actions/github/artifact/download@actions-v0.1.79
    with:
      name: ${{ inputs.name }}
      path: ${{ runner.temp }}
      run-id: ${{ inputs.run-id }}
  - uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.79
    name: Load env data
    id: data
    with:
      input-format: json-path
      input: ${{ runner.temp }}/${{ inputs.name }}.json
      filter: ${{ inputs.filter }}
      print-result: ${{ fromJSON(env.CI_DEBUG || 'false') && true || false }}
  - uses: envoyproxy/toolshed/gh-actions/github/env/save@actions-v0.1.79
    name: Save env
    if: ${{ inputs.check-name }}
    with:
      name: env-proxy
      env-format: yaml
      env: |
        workflow-env: ${{ inputs.run-id }}
        check-name: ${{ inputs.check-name }}
        startup-conclusion: ${{ github.event.workflow_run.conclusion }}
  - run: |
      # Cleanup temporary env file
      rm -rf ${{ runner.temp }}/${{ inputs.name }}.json
    shell: bash
