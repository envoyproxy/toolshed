
inputs:
  ancestor-fetch-depth:
    type: number
    default: 20
  config:
    type: string
    required: true
  branch:
    type: string
    required: true
  committer-name:
    type: string
    default:
  committer-email:
    type: string
    default:
  fetch-merge-commit:
    type: boolean
    default: true
  pr:
    type: number
    default:
  token:
    type: string
    default:
  show-progress:
    type: boolean
    default: false
  strip-prefix:
    type: string
    default:

outputs:
  branch_name:
    value: ${{ steps.branch.outputs.value }}


runs:
  using: composite
  steps:
  - uses: envoyproxy/toolshed/gh-actions/github/merge-commit@actions-v0.1.56
    id: merge-commit
    name: Fetch merge commit hash
    if: ${{ inputs.pr && fromJSON(inputs.fetch-merge-commit) }}
    with:
      repository: ${{ github.repository }}
      pr: ${{ inputs.pr }}
      token: ${{ inputs.token || github.token }}
  - name: Incoming YAML config
    id: incoming-config
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.56
    with:
      input: ${{ inputs.config || '{}' }}
      input-format: yaml
  # If its not a pr and the ref is set, fetch-depth should not be 1 as it
  # wont be able to check ancestry
  # If its not set or set to 1 it will be changed to 0
  # Otherwise the current value is preserved, allowing you to specify the
  # depth of the checked ancestor.
  - name: Parse YAML config
    id: parsed-config
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.56
    with:
      input: ${{ steps.incoming-config.outputs.value }}
      print-result: true
      filter: |
        if "${{ steps.merge-commit.outputs.sha }}" != "" then
          .ref = "${{ steps.merge-commit.outputs.sha }}"
        elif (.ref | type == "null") then
          del(.ref)
        else
          .
        end
        | if (. | has("show-progress") | not) and "${{ inputs.show-progress }}" != "" then
            .["show-progress"] = ${{ inputs.show-progress }}
          else
            .
          end
        | if ${{ ! inputs.pr }} and .ref then
            if .["fetch-depth"] == 1 or .["fetch-depth"] == "" then
               .["fetch-depth"] = ${{ inputs.ancestor-fetch-depth }}
            else
              .
            end
          else
            .
          end
        | if ${{ ! inputs.pr }} then
            .ref = "${{ inputs.branch }}"
          else
            .
          end

  - name: Git config
    shell: bash
    run: |
      git config --global advice.detachedHead false

  - name: Requested ref
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.56
    if: ${{ ! inputs.pr && fromJSON(steps.incoming-config.outputs.value).ref }}
    id: requested-ref
    with:
      input: ${{ steps.incoming-config.outputs.value }}
      print-result: true
      filter: |
        .ref
        | "Checkout: \(.)"

  # Add token to config separately and last to minimize leak risk
  - name: Config
    id: config
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.56
    with:
      input: ${{ inputs.token || 'NOTOKEN' }}
      options: -R
      input-format: secret
      filter: |
        . as $token
        | ${{ steps.parsed-config.outputs.value }} as $config
        | if $token == "NOTOKEN" then
            $config
          else
            ($config | .token = $token)
          end
  - uses: actions/checkout@v4
    name: Checkout repository
    with: ${{ fromJSON(steps.config.outputs.value) }}
  - run: |
      if ! git merge-base --is-ancestor "${REF}" HEAD; then
          echo "Provided ref (${REF}) is not an ancestor of current branch" >&2
          exit 1
      fi
      git checkout "${REF}"
    if: ${{ ! inputs.pr && fromJSON(steps.incoming-config.outputs.value).ref }}
    name: Check provided ref
    shell: bash
    env:
      REF: ${{ fromJSON(steps.incoming-config.outputs.value).ref }}
  - name: Configure committer
    if: ${{ inputs.committer-name && inputs.committer-email }}
    run: |
      git config --global user.name $COMMITTER_NAME
      git config --global user.email $COMMITTER_EMAIL
    env:
      COMMITTER_NAME: ${{ inputs.committer-name }}
      COMMITTER_EMAIL: ${{ inputs.committer-email }}
    shell: bash
  - id: branch
    uses: envoyproxy/toolshed/gh-actions/jq@actions-v0.1.56
    with:
      input: ${{ inputs.branch }}
      input-format: text
      options: -rR
      print-result: ${{ (fromJSON(env.CI_DEBUG || 'false') || fromJSON(env.RUNNER_DEBUG || 'false')) && true || false }}
      filter: |
        sub("^refs/pull/"; "")
        | sub("^refs/heads/"; "")
